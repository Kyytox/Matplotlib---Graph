# Number of unique addresses that were active in the network either as a sender or receiver.
import matplotlib.pyplot as plt
from matplotlib.ticker import FuncFormatter
import numpy as np
import pandas as pd
import requests

# Function for format yLabel in Graph
def millions(x, pos):
    return '{:1.0f}M'.format(x*1e-7)
formatterMil = FuncFormatter(millions)

# Variables
API_KEY = '2D0Dz5GSWhWqx35fu09qkQytwPa'
pathAPI = 'https://api.glassnode.com/v1/metrics/addresses/'
# 2022-08-01 02:00:00 (UnixTime)
# for collect all data of july 
unixTimeLastMonth = 1659312000

# Label for BTC 
asset = 'BTC'
ylabelName = ['2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022']
xlabelName = [23000000, 100000000, 200000000, 400000000, 600000000, 800000000, 1000000000]
backColor = '#001219'
backGraphColor = '#ADB5BD'
colorBarBtcTotal = '#e09f3e'
colorBarBtcActive = '#c1121f'

# API Total Addresses Bitcoin by month
res1 = requests.get(pathAPI + "count", params={'a': asset, 'i': '1month', 'api_key': API_KEY})

# convert to pandas dataframe and collect min/max values
df1 = pd.read_json(res1.text, convert_dates=['t'])
df1Max = df1.iloc[-1,1]
listDataTot = df1['v'][12::12].to_numpy()
listDataTot = list(listDataTot)
listDataTot.append(df1Max)

# API Active Addresses Bitcoin by month
res2 = requests.get(pathAPI + "active_count", params={'a': asset, 'i': '1month', 'api_key': API_KEY})

# convert to pandas dataframe and collect min/max values
df2 = pd.read_json(res2.text, convert_dates=['t'])
df2Max = df2.iloc[-1,1]
listDataAct = df2['v'][12 ::12].to_numpy()
listDataAct = list(listDataAct)
listDataAct.append(df2Max)

#Graph
fig, ax = plt.subplots(figsize=(18, 8))
fig.patch.set_facecolor(backColor)

# the label locations
x = np.arange(len(ylabelName))

# the width of the bars
width = 0.4
rects1 = plt.barh(x - width/2, listDataTot, width, color=colorBarBtcTotal)
rects2 = plt.barh(x + width/2, listDataAct, width, color=colorBarBtcActive)
plt.title('Total Addresses and Active Addresses BTC (by years)', loc ='center',fontweight='bold', fontsize='16', color='w')
plt.ylabel('Years', fontweight='bold', color = 'w', fontsize='14', horizontalalignment='center')
plt.yticks(range(len(ylabelName)), ylabelName)
plt.xlabel('New Addresses (Millions)', fontweight='bold', color = 'w', fontsize='12', horizontalalignment='center')
plt.xticks(xlabelName)
plt.legend(["Total Addresses", "Active Addresses"], loc='center right');
ax.grid(axis = 'x', color='black');
ax.tick_params(colors='w', labelsize=12)
ax.set_facecolor(backGraphColor)
ax.xaxis.set_major_formatter(formatter_mil)
